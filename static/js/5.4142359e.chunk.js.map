{"version":3,"sources":["components/common/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","props","child","hasError","touched","error","className","children","class","Textarea","Input","restProps","type","Password","Checkbox","label","Check","checked","value","required","maxLengthCreator","maxLength","length","minLengthCreator","minLength","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","module","exports","DialogItem","path","id","Nav","Item","Link","as","NavLink","name","DialogMessage","s","messages_item","message","maxLength100","AddMessageFormRedux","reduxForm","form","Form","onSubmit","handleSubmit","Group","controlId","Field","component","rows","placeholder","validate","Button","variant","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","Container","Row","Col","md","defaultActiveKey","form_add_message","values","onSendMessageClick","newMessageBody","compose","dialogsPage","dispatch","addNewMessageCreator"],"mappings":"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","file":"static/js/5.4142359e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className='form-group'>\r\n            {props.children}\r\n            {hasError && <div class=\"invalid-feedback\">{meta.error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n    const { input, meta, child, ...restProps } = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...props} className={\"form-control\" + \" \" + (hasError ? 'is-invalid' : '')}></textarea>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n    const { input, meta, child, ...restProps } = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <input type=\"text\" {...input} {...restProps} className={\"form-control\" + \" \" + (hasError ? 'is-invalid' : '')} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Password = (props) => {\r\n\r\n    const { input, meta, child, ...restProps } = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <FormControl {...props}>\r\n            <input type=\"password\" {...input} {...restProps} className={\"form-control\" + \" \" + (hasError ? 'is-invalid' : '')} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Checkbox = (props) => {\r\n    const { input, meta, type, label, child, ...restProps } = props;\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <Form.Check {...props}\r\n            {...input} {...restProps}\r\n            type={\"checkbox\"}\r\n            checked={typeof input.value == 'undefined' ? false : input.value}\r\n        />\r\n    )\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Dialogs_messages__2NVyn\",\"messages_item\":\"Dialogs_messages_item__208yu\"};","import React from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n    return (\n        <Nav.Item>\n            <Nav.Link as={NavLink} to={path}>{props.name}</Nav.Link>\n        </Nav.Item>\n    );\n}\n\nexport default DialogItem;","import React from 'react';\n\nimport s from './../Dialogs.module.css';\n\nconst DialogMessage = (props) => {\n    return (\n        <div className={s.messages_item}>{props.message}</div>\n    );\n}\n\nexport default DialogMessage;","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\n\nimport DialogItem from './DialogItem/DialogItem';\nimport DialogMessage from './DialogMessage/DialogMessage';\n\nimport s from './Dialogs.module.css';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { reduxForm, Field } from 'redux-form';\n\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = (props) => {\n    return <Form onSubmit={props.handleSubmit}>\n        <Form.Group controlId=\"formMessage\">\n            <Field component={Textarea}\n                rows=\"3\"\n                name=\"newMessageBody\"\n                placeholder=\"Enter text...\"\n                validate={[required, maxLength100]}\n            />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"\">\n            Submit\n        </Button>\n    </Form>;\n}\n\nconst Dialogs = (props) => {\n    let dialogsElements = props.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name} />);\n    let messagesElements = props.messages.map(m => <DialogMessage id={m.id} key={m.id} message={m.message} />);\n\n    let addNewMessage = (values) => {\n        props.onSendMessageClick(values.newMessageBody);\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col><h1>Dialogs</h1></Col>\n            </Row>\n            <Row>\n                <Col md={3}>\n                    <Nav defaultActiveKey=\"/dialogs\" className=\"flex-column\">\n\n                        {dialogsElements}\n\n                    </Nav>\n                </Col>\n                <Col>\n                    <div className={s.messages}>\n\n                        {messagesElements}\n\n                    </div>\n\n                    <div className={s.form_add_message}>\n                        <AddMessageFormRedux onSubmit={addNewMessage} />\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\n\nexport default Dialogs;","import React from 'react';\nimport Dialogs from \"./Dialogs\";\nimport { addNewMessageCreator } from \"../../redux/dialogs-reducer\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSendMessageClick: (newMessageBody) => {\n            dispatch(addNewMessageCreator(newMessageBody));\n        }\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}