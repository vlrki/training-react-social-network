{"version":3,"sources":["assets/preloader.svg","serviceWorker.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","redux/auth-reducer.js","components/common/Preloader/Preloader.jsx","redux/profile-reducer.js","redux/dialogs-reducer.js","api/userAPI.js","api/config.js","utils/object-helpers.js","redux/users-reducer.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","initialized","globalError","appReducer","state","action","type","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Header","props","Navbar","bg","variant","expand","Container","Brand","href","Toggle","aria-controls","Nav","className","Item","Link","as","NavLink","to","Collapse","Text","isAuth","login","HeaderContainer","this","React","Component","connect","getAuthUserData","Music","lazy","News","ProfileContainer","DialogsContainer","UsersContainer","LoginPage","LogoutPage","App","catchAllUnhandledErrors","promiseRejectionEvent","console","error","initializeApp","addEventListener","removeEventListener","fallback","Preloader","path","render","AppContainer","withRouter","dispatch","promise","Promise","all","then","MainApp","rerenderEntireTree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","SET_USER_DATA","userId","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","a","authAPI","me","response","data","resultCode","id","password","rememberMe","captcha","getCaptchaUrl","messages","length","stopSubmit","_error","securityAPI","url","logout","src","preloader","alt","posts","message","likesCount","friends","name","profile","status","setStatus","getUserProfile","userAPI","getProfile","getStatus","profileAPI","updateStatus","putStatus","addPost","newPostText","addPostCreator","savePhoto","file","photos","saveProfile","reject","stateCopy","likeCount","filter","p","postId","dialogs","addNewMessageCreator","newMessageBody","instance","axios","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSiza","get","follow","post","unfollow","delete","put","photoFile","formData","FormData","append","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","isFetching","followingInProgress","followUnfollowFlow","apiMethod","actionCreator","setFollowingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsers","setIsFetching","requestUsers","page","totalCount","bind","followed"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,uC,sKCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2ECdFC,EAAe,CACfC,aAAa,EACbC,YAAa,MA2BFC,EAxBI,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACjD,OAAQA,EAAOC,MACX,IAToB,sBAUhB,OAAO,eACAF,EADP,CAEIH,aAAa,IAGrB,QACI,OAAOG,ICRfG,EAAWC,YAAgB,CAC3BC,YAAaC,IACbC,YAAaC,IACbC,UAAWC,IACXC,KAAMC,IACNC,KAAMC,IACNC,IAAKhB,IAIHiB,EAAmBxB,OAAOyB,sCAAwCC,IAClEC,EAAQC,YAAYjB,EAAgCa,EACtDK,YAAgBC,OAGpB9B,OAAO+B,UAAYJ,EAEJA,Q,iGCQAK,EA5BA,SAACC,GACd,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACtC,kBAACC,EAAA,EAAD,KACE,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,kBACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,KAAU,kBAACF,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAG,KAA1B,SACV,kBAACN,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAG,YAA1B,WACA,kBAACN,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAG,YAA1B,WACA,kBAACN,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAG,SAA1B,QACA,kBAACN,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAG,UAA1B,SACA,kBAACN,EAAA,EAAIG,KAAL,CAAUC,GAAIC,IAASC,GAAG,UAA1B,UAGF,kBAACf,EAAA,EAAOgB,SAAR,CAAiBN,UAAU,uBACzB,kBAACV,EAAA,EAAOiB,KAAR,KACGlB,EAAMmB,OACH,oCAAGnB,EAAMoB,MAAT,MAAkB,kBAAC,IAAD,CAASJ,GAAG,WAAZ,WAClB,kBAAC,IAAD,CAASA,GAAG,UAAZ,cCrBVK,E,iLAEE,OAAO,kBAAC,EAAWC,KAAKtB,W,GAFFuB,IAAMC,WAWrBC,eALS,SAAClD,GAAD,MAAY,CAChC4C,OAAQ5C,EAAMW,KAAKiC,OACnBC,MAAO7C,EAAMW,KAAKkC,SAGkB,CAAEM,qBAA3BD,CAA8CJ,G,QCJvDM,EAAQJ,IAAMK,MAAK,kBAAM,iCACzBC,EAAON,IAAMK,MAAK,kBAAM,kCACxBE,EAAmBP,IAAMK,MAAK,kBAAM,uDACpCG,EAAmBR,IAAMK,MAAK,kBAAM,uDACpCI,EAAiBT,IAAMK,MAAK,kBAAM,iCAClCK,EAAYV,IAAMK,MAAK,kBAAM,uDAC7BM,EAAaX,IAAMK,MAAK,kBAAM,iCAE9BO,E,2MAEFC,wBAA0B,SAACC,GACvBC,QAAQC,MAAMF,I,iFAGArC,GACdsB,KAAKtB,MAAMwC,gBACXzE,OAAO0E,iBAAiB,qBAAsBnB,KAAKc,2B,6CAInDrE,OAAO2E,oBAAoB,qBAAsBpB,KAAKc,2B,+BAKtD,OAAKd,KAAKtB,MAAM5B,YAIR,oCACI,kBAAC,EAAD,MAEA,kBAAC,WAAD,CAAUuE,SAAU,kBAACC,EAAA,EAAD,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,WAAWC,OAAQ,kBAAM,kBAACf,EAAD,SADzC,IAEI,kBAAC,IAAD,CAAOc,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAChB,EAAD,SAC9C,kBAAC,IAAD,CAAOe,KAAK,SAASC,OAAQ,kBAAM,kBAACnB,EAAD,SACnC,kBAAC,IAAD,CAAOkB,KAAK,QAAQC,OAAQ,kBAAM,kBAACjB,EAAD,SAClC,kBAAC,IAAD,CAAOgB,KAAK,SAASC,OAAQ,kBAAM,kBAACd,EAAD,SACnC,kBAAC,IAAD,CAAOa,KAAK,SAASC,OAAQ,kBAAM,kBAACb,EAAD,SACnC,kBAAC,IAAD,CAAOY,KAAK,UAAUC,OAAQ,kBAAM,kBAACZ,EAAD,SACpC,kBAAC,IAAD,CAAOW,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAU9B,GAAG,gBAC3C,kBAAC,IAAD,CAAO6B,KAAK,IAAIC,OAAQ,kBAAM,oDAhBvC,kBAACF,EAAA,EAAD,U,GAlBDpB,aAiDduB,EAAetD,YACfuD,IACAvB,aARoB,SAAClD,GACrB,MAAO,CACHH,YAAaG,EAAMe,IAAIlB,eAMF,CAAEoE,cJ/CF,kBAAM,SAACS,GAChC,IAAIC,EAAUD,EAASvB,eAEvByB,QAAQC,IAAI,CAACF,IACRG,MAAK,WACFJ,EAP6B,CAAExE,KApBf,+BImETgB,CAE8B0C,GAclCmB,EAZD,SAACtD,GAGX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAACqD,EAAD,SCtEZQ,EAAqB,WACrBC,IAASV,OACL,kBAAC,EAAD,MAAaW,SAASC,eAAe,UAG7CH,EAAmB7D,EAAMiE,YAEzBjE,EAAMkE,WAAU,WACAlE,EAAMiE,WAClBJ,ON+GE,kBAAmBM,WACrBA,UAAUC,cAAcC,MAAMV,MAAK,SAAAW,GACjCA,EAAaC,iB,wLOhIbC,EAAgB,kCAGlB/F,EAAe,CACfgG,OAAQ,KACRC,MAAO,KACPhD,MAAO,KACPD,QAAQ,EACRkD,WAAY,MAsBHC,EAAkB,SAACH,EAAQC,EAAOhD,EAAOD,GAAvB,MAAmC,CAAE1C,KAAMyF,EAAeK,QAAS,CAAEJ,OAAQA,EAAQC,MAAOA,EAAOhD,MAAOA,EAAOD,OAAQA,KAC3IqD,EAAuB,SAACH,GAAD,MAAiB,CAAE5F,KA9BvB,4CA8BsD8F,QAAS,CAAEF,gBAEpF3C,EAAkB,yDAAM,WAAOuB,GAAP,uBAAAwB,EAAA,sEACZC,IAAQC,KADI,OAGA,KAF7BC,EAD6B,QAGpBC,KAAKC,aAAmB,EACNF,EAASC,KAAKA,KAAnCE,EAD0B,EAC1BA,GAAI3D,EADsB,EACtBA,MAAOgD,EADe,EACfA,MACjBnB,EAASqB,EAAgBS,EAAI3D,EAAOgD,GAAO,KALd,2CAAN,uDASlBhD,EAAQ,SAACgD,EAAOY,EAAUC,EAAYC,GAA9B,8CAA0C,WAAOjC,GAAP,iBAAAwB,EAAA,sEACtCC,IAAQtD,MAAMgD,EAAOY,EAAUC,EAAYC,GADL,OAG1B,KAF7BN,EADuD,QAG9CC,KAAKC,WACd7B,EAASvB,KAEwB,KAA7BkD,EAASC,KAAKC,WACd7B,EAASkC,MAEL5C,EAAQqC,EAASC,KAAKO,SAASC,OAAS,EAAIT,EAASC,KAAKO,SAAS,GAAK,aAC5EnC,EAASqC,YAAW,QAAS,CAAEC,OAAQhD,MAVY,2CAA1C,uDAeR4C,EAAgB,yDAAM,WAAOlC,GAAP,iBAAAwB,EAAA,sEACRe,IAAYL,gBADJ,OACzBP,EADyB,OAEzBP,EAAaO,EAASC,KAAKY,IAEjCxC,EAASuB,EAAqBH,IAJC,2CAAN,uDAOhBqB,EAAS,yDAAM,WAAOzC,GAAP,SAAAwB,EAAA,sEACHC,IAAQgB,SADL,OAGS,IAHT,OAGXb,KAAKC,YACd7B,EAASqB,EAAgB,KAAM,KAAM,MAAM,IAJvB,2CAAN,uDAQPnF,IA7DK,WAAmC,IAAlCZ,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAQA,EAAOC,MACX,KAAKyF,EAML,IAlBwB,4CAmBpB,OAAO,eACA3F,EADP,GAEOC,EAAO+F,SAGlB,QACI,OAAOhG,K,gCC7BnB,8DAiBeqE,IAVC,SAAC5C,GACb,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAK2F,IAAKC,IAAWC,IAAI,U,sSCDrC1H,EAAe,CACf2H,MAAO,CACH,CAAEf,GAAI,EAAGgB,QAAS,YAAaC,WAAY,GAC3C,CAAEjB,GAAI,EAAGgB,QAAS,MAAOC,WAAY,GACrC,CAAEjB,GAAI,EAAGgB,QAAS,MAAOC,WAAY,IAEzCC,QAAS,CACL,CAAElB,GAAI,EAAGmB,KAAM,SACf,CAAEnB,GAAI,EAAGmB,KAAM,SACf,CAAEnB,GAAI,EAAGmB,KAAM,SACf,CAAEnB,GAAI,EAAGmB,KAAM,QACf,CAAEnB,GAAI,EAAGmB,KAAM,SACf,CAAEnB,GAAI,EAAGmB,KAAM,SAEnBC,QAAS,KACTC,OAAQ,IA0DCC,EAAY,SAACD,GAAD,MAAa,CAAE3H,KA7ErB,aA6EuC2H,OAAQA,IAIrDE,EAAiB,SAACnC,GAAD,8CAAY,WAAOlB,GAAP,eAAAwB,EAAA,sEACjB8B,IAAQC,WAAWrC,GADF,OAClCS,EADkC,OAGtC3B,EARwC,CAAExE,KA7ErB,mBA6E6C0H,QAQ1CvB,EAASC,OAHK,2CAAZ,uDAMjB4B,EAAY,SAACtC,GAAD,8CAAY,WAAOlB,GAAP,eAAAwB,EAAA,sEACZiC,IAAWD,UAAUtC,GADT,OAC7BS,EAD6B,OAGjC3B,EAASoD,EAAUzB,EAASC,OAHK,2CAAZ,uDAMZ8B,EAAe,SAACP,GAAD,8CAAY,WAAOnD,GAAP,SAAAwB,EAAA,+EAEXiC,IAAWE,UAAUR,GAFV,UAIC,IAJD,OAInBvB,KAAKC,WAJc,gBAK5B7B,EAASoD,EAAUD,IALS,2BAOtB,QAPsB,mHAAZ,uDAcfS,EAAU,SAACC,GAAD,OAAiB,SAAC7D,GACrCA,EAlC0B,SAAC6D,GAAD,MAAkB,CAAErI,KA7EjC,WA6EiDqI,eAkCrDC,CAAeD,MAGfE,EAAY,SAACC,GAAD,8CAAU,WAAOhE,GAAP,eAAAwB,EAAA,sEACViC,IAAWM,UAAUC,GADX,OAGE,KAF7BrC,EAD2B,QAGlBC,KAAKC,YACd7B,EArCqC,CAAExE,KA7ErB,oBA6E8CyI,OAqCtCtC,EAASC,KAAKA,KAAKqC,SAJlB,2CAAV,uDAQZC,EAAc,SAAChB,GAAD,8CAAa,WAAOlD,EAAUU,GAAjB,mBAAAc,EAAA,6DAC9BN,EAASR,IAAWzE,KAAKiF,OADK,SAGbuC,IAAWS,YAAYhB,GAHV,UAKH,KAF3BvB,EAH8B,QAKvBC,KAAKC,WALkB,gBAMhC7B,EAASqD,EAAenC,IANQ,8BAQ5B5B,EAAQqC,EAASC,KAAKO,SAASC,OAAS,EAAIT,EAASC,KAAKO,SAAS,GAAK,aAC5EnC,EAASqC,YAAW,cAAe,CAACC,OAAQhD,KATZ,kBAWzBY,QAAQiE,OAAOxC,EAASC,KAAKO,SAAS,KAXb,4CAAb,yDAeZvG,IAhHQ,WAAmC,IAAlCN,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACrD,OAAQA,EAAOC,MACX,IA3BS,WA4BL,IAAI4I,EAAS,eACN9I,EADM,CAETuH,MAAM,GAAD,mBAAMvH,EAAMuH,OAAZ,CAAmB,CAAEf,GAAI,EAAGgB,QAASvH,EAAOsI,YAAaQ,UAAW,OAG7E,OAAOD,EAGX,IAnCY,cAoCR,IAAIA,EAAS,eACN9I,EADM,CAETuH,MAAM,YAAKvH,EAAMuH,MAAMyB,QAAO,SAAAC,GAAC,OAAIA,EAAEzC,IAAMvG,EAAOiJ,aAGtD,OAAOJ,EAGX,IA3CiB,mBA4Cb,IAAIA,EAAS,eACN9I,EADM,CAET4H,QAAS3H,EAAO2H,UAGpB,OAAOkB,EAGX,IAnDW,aAoDP,IAAIA,EAAS,eACN9I,EADM,CAET6H,OAAQ5H,EAAO4H,SAGnB,OAAOiB,EAGX,IA3DkB,oBA4Dd,IAAIA,EAAS,eACN9I,EADM,CAET4H,QAAQ,eAAK5H,EAAM4H,QAAZ,CAAqBe,OAAQ1I,EAAO0I,WAG/C,OAAOG,EAGX,QACI,OAAO9I,K,qFC1EfJ,EAAe,CACfuJ,QAAS,CACL,CAAE3C,GAAI,EAAGmB,KAAM,SACf,CAAEnB,GAAI,EAAGmB,KAAM,SACf,CAAEnB,GAAI,EAAGmB,KAAM,SACf,CAAEnB,GAAI,EAAGmB,KAAM,SAEnBd,SAAU,CACN,CAAEL,GAAI,EAAGgB,QAAS,OAClB,CAAEhB,GAAI,EAAGgB,QAAS,UAClB,CAAEhB,GAAI,EAAGgB,QAAS,gBAClB,CAAEhB,GAAI,EAAGgB,QAAS,kBAoBb4B,EAAuB,SAACC,GAAD,MAAqB,CAAEnJ,KAjCvC,cAiC0DmJ,mBAE/D7I,IAlBQ,WAAmC,IAAlCR,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAnBY,cAoBR,IAAI4I,EAAS,eACN9I,EADM,CAET6G,SAAS,GAAD,mBAAM7G,EAAM6G,UAAZ,CAAsB,CAAEL,GAAI,EAAGgB,QAASvH,EAAOoJ,oBAG3D,OAAOP,EAGX,QACI,OAAO9I,K,oDC7BnB,wIAGA,IAAMsJ,EAAWC,IAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UCPc,0CDYT3B,EAAU,CACnB4B,SADmB,WACuB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAAYhF,MAAK,SAAAuB,GACpE,OAAOA,MAIf2D,OAPmB,SAOZpE,GACH,OAAO0D,EAASW,KAAT,iBAAwBrE,IAAUd,MAAK,SAAAuB,GAC1C,OAAOA,MAIf6D,SAbmB,SAaVtE,GACL,OAAO0D,EAASa,OAAT,iBAA0BvE,IAAUd,MAAK,SAAAuB,GAC5C,OAAOA,MAIf4B,WAnBmB,SAmBRrC,GACP,OAAOuC,EAAWF,WAAWrC,KAIxBuC,EAAa,CACtBF,WADsB,SACXrC,GACP,OAAO0D,EAASS,IAAI,WAAanE,IAGrCsC,UALsB,SAKZtC,GACN,OAAO0D,EAASS,IAAI,kBAAoBnE,IAG5CyC,UATsB,SASZR,GACN,OAAOyB,EAASc,IAAI,iBAAkB,CAAEvC,OAAQA,KAGpDY,UAbsB,SAaZ4B,GACN,IAAIC,EAAW,IAAIC,SAGnB,OAFAD,EAASE,OAAO,QAASH,GAElBf,EAASc,IAAI,gBAAiBE,EAAU,CAC3CX,QAAS,CACL,eAAgB,0BAK5Bf,YAxBsB,SAwBVhB,GACR,OAAO0B,EAASc,IAAI,UAAWxC,KAK1BzB,EAAU,CACnBC,GADmB,WAEf,OAAOkD,EAASS,IAAI,WAAY,CAAEN,iBAAiB,KAGvD5G,MALmB,SAKbgD,EAAOY,GAAwC,IAA9BC,EAA6B,wDAATC,EAAS,uCAChD,OAAO2C,EAASW,KAAK,cAAe,CAAEpE,QAAOY,WAAUC,aAAYC,aAGvEQ,OATmB,WAUf,OAAOmC,EAASa,OAAO,iBAKlBlD,EAAc,CACvBL,cADuB,WAEnB,OAAO0C,EAASS,IAAI,2BAA4B,CAAEN,iBAAiB,O,kFEnF9DgB,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,eAAKI,EAAZ,GAAkBF,GAGfE,M,gRCHf,IAQInL,EAAe,CACfoL,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBrB,YAAa,EACbsB,YAAY,EACZC,oBAAqB,IAsDnBC,EAAkB,uCAAG,WAAO3G,EAAUkB,EAAQ0F,EAAWC,GAApC,SAAArF,EAAA,6DACvBxB,EAAS8G,EAAuB5F,GAAQ,IADjB,SAGF0F,EAAU1F,GAHR,OAKS,GALT,OAKVU,KAAKC,YACd7B,EAAS6G,EAAc3F,IAG3BlB,EAAS8G,EAAuB5F,GAAQ,IATjB,2CAAH,4DAYX6F,EAAgB,SAAC7F,GAAD,MAAa,CAAE1F,KAhF7B,SAgF2C0F,OAAQA,IACrD8F,EAAkB,SAAC9F,GAAD,MAAa,CAAE1F,KAhF7B,WAgF6C0F,OAAQA,IACzD+F,EAAW,SAACX,GAAD,MAAY,CAAE9K,KAhFpB,YAgFqC8K,MAAOA,IACjDY,EAAiB,SAAC/B,GAAD,MAAkB,CAAE3J,KAhFzB,mBAgFiD2J,YAAaA,IAC1EgC,EAAgB,SAACX,GAAD,MAAsB,CAAEhL,KAhFvB,wBAgFoDgL,gBAAiBA,IACtFY,EAAgB,SAACX,GAAD,MAAiB,CAAEjL,KAhFxB,kBAgF+CiL,WAAYA,IACtEK,EAAyB,SAAC5F,EAAQuF,GAAT,MAAyB,CAAEjL,KAhF/B,4BAgFgEiL,WAAYA,EAAYvF,OAAQA,IAGrHmG,EAAe,SAACC,EAAMf,GAE/B,8CAAO,WAAOvG,GAAP,eAAAwB,EAAA,6DACHxB,EAASoH,GAAc,IADpB,SAGkB9D,IAAQ4B,SAASoC,EAAMf,GAHzC,OAGC5E,EAHD,OAKH3B,EAASiH,EAAStF,EAASC,KAAKoE,QAChChG,EAASmH,EAAcxF,EAASC,KAAK2F,aACrCvH,EAASkH,EAAeI,IACxBtH,EAASoH,GAAc,IARpB,2CAAP,mDAAM,IAYG9B,EAAS,SAACpE,GACnB,8CAAO,WAAOlB,GAAP,SAAAwB,EAAA,sDACHmF,EAAmB3G,EAAUkB,EAAQoC,IAAQgC,OAAOkC,KAAKlE,KAAUyD,GADhE,2CAAP,mDAAM,IAKGvB,EAAW,SAACtE,GACrB,8CAAO,WAAOlB,GAAP,SAAAwB,EAAA,sDACHmF,EAAmB3G,EAAUkB,EAAQoC,IAAQkC,SAASgC,KAAKlE,KAAU0D,GADlE,2CAAP,mDAAM,IAMKhL,IAnGM,WAAmC,IAAlCV,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACnD,OAAQA,EAAOC,MACX,IAnBO,SAoBH,OAAO,eACAF,EADP,CAEIgL,MAAOP,EAAoBzK,EAAMgL,MAAO/K,EAAO2F,OAAQ,KAAM,CAAEuG,UAAU,MAGjF,IAxBS,WAyBL,OAAO,eACAnM,EADP,CAEIgL,MAAOP,EAAoBzK,EAAMgL,MAAO/K,EAAO2F,OAAQ,KAAM,CAAEuG,UAAU,MAGjF,IA7BU,YA8BN,OAAO,eACAnM,EADP,CAEIgL,MAAO/K,EAAO+K,QAGtB,IAlCiB,mBAmCb,OAAO,eACAhL,EADP,CAEI6J,YAAa5J,EAAO4J,cAG5B,IAvCsB,wBAwClB,OAAO,eACA7J,EADP,CAEIkL,gBAAiBjL,EAAOiL,kBAGhC,IA5CgB,kBA6CZ,OAAO,eACAlL,EADP,CAEImL,WAAYlL,EAAOkL,aAG3B,IAjD0B,4BAkDtB,OAAO,eACAnL,EADP,CAEIoL,oBAAqBnL,EAAOkL,WAAP,sBACXnL,EAAMoL,qBADK,CACgBnL,EAAO2F,SADvB,YAEX5F,EAAMoL,oBAAoBpC,QAAO,SAAAxC,GAAE,OAAIA,IAAOvG,EAAO2F,aAGvE,QACI,OAAO5F,M","file":"static/js/main.13bf5c41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.447449d2.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n      <Container>\n        <Navbar.Brand href=\"#home\">Social Network</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Nav className=\"mr-auto\">\n          <Nav.Item><Nav.Link as={NavLink} to=\"/\">Home</Nav.Link></Nav.Item>\n          <Nav.Link as={NavLink} to=\"/profile\">Profile</Nav.Link>\n          <Nav.Link as={NavLink} to=\"/dialogs\">Dialogs</Nav.Link>\n          <Nav.Link as={NavLink} to=\"/news\">News</Nav.Link>\n          <Nav.Link as={NavLink} to=\"/music\">Music</Nav.Link>\n          <Nav.Link as={NavLink} to=\"/users\">Users</Nav.Link>\n        </Nav>\n\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text>\n            {props.isAuth\n              ? <>{props.login} | <NavLink to=\"/logout\">Logout</NavLink></>\n              : <NavLink to=\"/login\">Login</NavLink>\n            }\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { getAuthUserData } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuthUserData })(HeaderContainer);","import React, { Component, Suspense } from 'react';\nimport './App.css';\n\nimport { connect, Provider } from 'react-redux';\nimport { compose } from 'redux';\nimport { Route, withRouter, HashRouter, Switch, Redirect } from 'react-router-dom';\nimport { initializeApp } from './redux/app-reducer';\nimport store from './redux/redux-store';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Preloader from './components/common/Preloader/Preloader';\n\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\nconst LoginPage = React.lazy(() => import('./components/Login/Login'));\nconst LogoutPage = React.lazy(() => import('./components/Login/Logout'));\n\nclass App extends Component {\n\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n        console.error(promiseRejectionEvent);\n    }\n\n    componentDidMount(props) {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader />\n        } else {\n            return (\n                <>\n                    <HeaderContainer />\n\n                    <Suspense fallback={<Preloader />}>\n                        <Switch>\n                            <Route path='/dialogs' render={() => <DialogsContainer />} /> {/* exact? */}\n                            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n                            <Route path='/music' render={() => <Music />} />\n                            <Route path='/news' render={() => <News />} />\n                            <Route path='/users' render={() => <UsersContainer />} />\n                            <Route path='/login' render={() => <LoginPage />} />\n                            <Route path='/logout' render={() => <LogoutPage />} />\n                            <Route path='/' render={() => <Redirect to=\"/profile\" />} />\n                            <Route path='*' render={() => <div>404 Not found</div>} />\n                        </Switch>\n                    </Suspense>\n                </>\n            );\n        }\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n};\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, { initializeApp }))(App);\n\nlet MainApp = (props) => {\n\n    // Лучше использовать BrowserRouter\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    );\n}\n\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/redux-store';\nimport MainApp from './App';\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <MainApp />, document.getElementById('root'));\n};\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState();\n    rerenderEntireTree(state);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { authAPI, securityAPI } from '../api/userAPI';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'test-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'test-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId: userId, email: email, login: login, isAuth: isAuth } });\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({ type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl } });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        } else {\r\n            let error = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", { _error: error }));\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport preloader from '../../../assets/preloader.svg';\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return <Container>\r\n        <Row>\r\n            <Col>\r\n                <img src={preloader} alt='' />\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n}\r\n\r\nexport default Preloader;","import { userAPI, profileAPI } from '../api/userAPI';\nimport { stopSubmit } from 'redux-form';\n\nconst ADD_POST = 'ADD-POST';\nconst DELETE_POST = 'DELETE_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SET_PHOTO_SUCCESS = 'SET_PHOTO_SUCCESS';\nconst SET_PROFILE_SUCCESS = 'SET_PROFILE_SUCCESS';\n\nlet initialState = {\n    posts: [\n        { id: 0, message: 'Excelent!', likesCount: 4 },\n        { id: 1, message: 'Wow', likesCount: 5 },\n        { id: 2, message: 'Hi!', likesCount: 2 },\n    ],\n    friends: [\n        { id: 0, name: 'Vasya' },\n        { id: 1, name: 'Katya' },\n        { id: 2, name: 'Masha' },\n        { id: 3, name: 'Dima' },\n        { id: 4, name: 'Petya' },\n        { id: 5, name: 'Rita' },\n    ],\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let stateCopy = {\n                ...state,\n                posts: [...state.posts, { id: 3, message: action.newPostText, likeCount: 0 }],\n            };\n\n            return stateCopy;\n        }\n\n        case DELETE_POST: {\n            let stateCopy = {\n                ...state,\n                posts: [...state.posts.filter(p => p.id != action.postId)],\n            };\n\n            return stateCopy;\n        }\n\n        case SET_USER_PROFILE: {\n            let stateCopy = {\n                ...state,\n                profile: action.profile\n            };\n\n            return stateCopy;\n        }\n\n        case SET_STATUS: {\n            let stateCopy = {\n                ...state,\n                status: action.status\n            };\n\n            return stateCopy;\n        }\n\n        case SET_PHOTO_SUCCESS: {\n            let stateCopy = {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            };\n\n            return stateCopy;\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const addPostCreator = (newPostText) => ({ type: ADD_POST, newPostText });\nexport const deletePostCreator = (postId) => ({ type: DELETE_POST, postId: postId });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile: profile });\nexport const setStatus = (status) => ({ type: SET_STATUS, status: status });\nexport const savePhotoSuccess = (photos) => ({ type: SET_PHOTO_SUCCESS, photos });\nexport const saveProfileSuccess = (profile) => ({ type: SET_PROFILE_SUCCESS, profile });\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await userAPI.getProfile(userId);\n\n    dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    try {\n        let response = await profileAPI.putStatus(status);\n\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        } else {\n            throw \"error\";\n        }\n    } catch(error) {\n        // debugger;\n    }\n};\n\nexport const addPost = (newPostText) => (dispatch) => {\n    dispatch(addPostCreator(newPostText));\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file);\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n\n    const response = await profileAPI.saveProfile(profile);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        let error = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";        \n        dispatch(stopSubmit(\"editProfile\", {_error: error}));\n        \n        return Promise.reject(response.data.messages[0]);\n    }\n}\n\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n    dialogs: [\n        { id: 0, name: 'Vasya' },\n        { id: 1, name: 'Katya' },\n        { id: 2, name: 'Masha' },\n        { id: 3, name: 'Dima' },\n    ],\n    messages: [\n        { id: 0, message: 'Hi!' },\n        { id: 1, message: 'Hello!' },\n        { id: 2, message: 'How are you?' },\n        { id: 3, message: 'Fine thanks.' },\n    ],\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let stateCopy = {\n                ...state,\n                messages: [...state.messages, { id: 4, message: action.newMessageBody }]\n            };\n\n            return stateCopy;\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const addNewMessageCreator = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody });\n\nexport default dialogsReducer;","import axios from 'axios';\r\nimport { apiKey } from './config';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': apiKey\r\n    }\r\n});\r\n\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSiza = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSiza}`).then(response => {\r\n            return response\r\n        })\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`).then(response => {\r\n            return response\r\n        })\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => {\r\n            return response\r\n        })\r\n    },\r\n\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get('profile/' + userId);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n\r\n    putStatus(status) {\r\n        return instance.put('profile/status', { status: status });\r\n    },\r\n\r\n    savePhoto(photoFile) {\r\n        var formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put('profile/photo', formData, { \r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile);\r\n    },\r\n};\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me/', { withCredentials: true });\r\n    },\r\n\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post('auth/login/', { email, password, rememberMe, captcha });\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete('auth/login/');\r\n    }\r\n}\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url', { withCredentials: true });\r\n    },\r\n}","export const apiKey = 'c35b5940-b9e7-46eb-ae99-42dcc3385481';","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n\r\n        return u;\r\n    })\r\n};","import { userAPI } from '../api/userAPI';\nimport { updateObjectInArray } from '../utils/object-helpers';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst SET_IS_FETCHING = 'SET_IS_FETCHING';\nconst SET_FOLLOWING_IN_PROGRESS = 'SET_FOLLOWING_IN_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 10,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\n            };\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\n            };\n\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users\n            };\n\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            };\n\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount\n            };\n\n        case SET_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            };\n\n        case SET_FOLLOWING_IN_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\n            };\n\n        default:\n            return state;\n    }\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(setFollowingInProgress(userId, true));\n\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n\n    dispatch(setFollowingInProgress(userId, false));\n}\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId: userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId: userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users: users });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage });\nexport const setTotalUsers = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalUsersCount });\nexport const setIsFetching = (isFetching) => ({ type: SET_IS_FETCHING, isFetching: isFetching });\nexport const setFollowingInProgress = (userId, isFetching) => ({ type: SET_FOLLOWING_IN_PROGRESS, isFetching: isFetching, userId: userId });\n\n\nexport const requestUsers = (page, pageSize) => {\n\n    return async (dispatch) => {\n        dispatch(setIsFetching(true));\n\n        let response = await userAPI.getUsers(page, pageSize);\n\n        dispatch(setUsers(response.data.items));\n        dispatch(setTotalUsers(response.data.totalCount));\n        dispatch(setCurrentPage(page));\n        dispatch(setIsFetching(false));\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess);\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess);\n    }\n}\n\n\nexport default usersReducer;"],"sourceRoot":""}